spring.application.name=SnapShopApi

#PostgresDatabaseConnection
spring.datasource.url=jdbc:postgresql://localhost:5432/ecommercedata
spring.datasource.username=wayne_ragsac
spring.datasource.password=W3yne&V3iolet
spring.datasource.driver-class-name=org.postgresql.Driver
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true

# Server port
server.port=8443

# Enable SSL
server.ssl.enabled=true

# Keystore configuration
server.ssl.key-store=classpath:keystore
server.ssl.key-store-password=W3yne&V3iolet
server.ssl.key-store-type=PKCS12
server.ssl.key-alias=mykey



# Enable GraphQL in Spring
spring.graphql.enabled=true
graphql.schema.locations=classpath:/GraphQL/queries/*.graphqls
org.springframework.graphql=DEBUG

# Google OAuth 2.0 Configuration
spring.security.oauth2.client.registration.google.client-id=${GOOGLE_OAUTH_CLIENT_ID}
spring.security.oauth2.client.registration.google.client-secret=${GOOGLE_OAUTH_CLIENT_SECRET}
spring.security.oauth2.client.registration.google.scope=openid, profile, email
spring.config.import=optional:file:.env
spring.security.oauth2.client.registration.google.redirect-uri=https://localhost:8443/snapshoplogin/oauth2/code/google
spring.security.oauth2.client.registration.google.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.google.client-authentication-method=post
spring.security.oauth2.client.provider.google.authorization-uri=https://accounts.google.com/o/oauth2/auth
spring.security.oauth2.client.provider.google.token-uri=https://oauth2.googleapis.com/token
spring.security.oauth2.client.provider.google.user-info-uri=https://www.googleapis.com/oauth2/v3/userinfo


# Set log level for all classes
logging.level.root=INFO
logging.level.org.springframework.boot=INFO
logging.level.org.hibernate=DEBUG

# Add more specific loggers if needed
logging.level.com.SnapShopApi=DEBUG
logging.level.com.W3yneRagsac.SnapShop=DEBUG


