spring.application.name=SnapShopApi

#PostgresDatabaseConnection
spring.datasource.url=jdbc:postgresql://localhost:5432/ecommercedata
spring.datasource.username=wayne_ragsac
spring.datasource.password=W3yne&V3iolet
spring.datasource.driver-class-name=org.postgresql.Driver
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true

#Server port
server.port=8080
server.ssl.key-store=classpath:keystore.p12
server.ssl.key-store-password=W3yne&V3iolet
server.ssl.key-store-type=JKS
server.ssl.key-alias=tomcat


# Enable GraphQL in Spring
spring.graphql.enabled=true
graphql.schema.locations=classpath:/GraphQL/queries/user.graphqls

# Google OAuth 2.0 Configuration
spring.security.oauth2.client.registration.google.client-id=754817841280-miud5j3p0ok8h31afgq38esqb7q415dm.apps.googleusercontent.com
spring.security.oauth2.client.registration.google.client-secret=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
spring.security.oauth2.client.registration.google.scope=openid, profile, email
spring.security.oauth2.client.registration.google.redirect-uri=https://localhost:8080/login/oauth2/code/google
spring.security.oauth2.client.registration.google.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.google.client-authentication-method=post
spring.security.oauth2.client.provider.google.authorization-uri=https://accounts.google.com/o/oauth2/auth
spring.security.oauth2.client.provider.google.token-uri=https://oauth2.googleapis.com/token
spring.security.oauth2.client.provider.google.user-info-uri=https://www.googleapis.com/oauth2/v3/userinfo



#Debugging
logging.level.org.springframework=DEBUG
logging.level.com.yourpackage=DEBUG
logging.level.org.hibernate=DEBUG
